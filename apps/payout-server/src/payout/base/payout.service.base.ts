/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Payout as PrismaPayout } from "@prisma/client";

export class PayoutServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.PayoutCountArgs, "select">): Promise<number> {
    return this.prisma.payout.count(args);
  }

  async payouts(args: Prisma.PayoutFindManyArgs): Promise<PrismaPayout[]> {
    return this.prisma.payout.findMany(args);
  }
  async payout(
    args: Prisma.PayoutFindUniqueArgs
  ): Promise<PrismaPayout | null> {
    return this.prisma.payout.findUnique(args);
  }
  async createPayout(args: Prisma.PayoutCreateArgs): Promise<PrismaPayout> {
    return this.prisma.payout.create(args);
  }
  async updatePayout(args: Prisma.PayoutUpdateArgs): Promise<PrismaPayout> {
    return this.prisma.payout.update(args);
  }
  async deletePayout(args: Prisma.PayoutDeleteArgs): Promise<PrismaPayout> {
    return this.prisma.payout.delete(args);
  }
}
